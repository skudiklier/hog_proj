def free_bacon(opponent_score):
    """Return the points scored from rolling 0 dice (Free Bacon)."""
    # BEGIN PROBLEM 2
    return max(opponent_score // 10, opponent_score % 10) + 1
    # END PROBLEM 2

# Write your prime functions here!
def is_prime(p):
    """Determine this number whether is prime"""
    if p < 2:
        return False
    for i in range(2,p):
        if p % i == 0:
            return False
    return True

def next_prime(p):
    """Find the next prime"""
    assert type(p) == int
    if is_prime(p) == True:
        next = p + 1
    while is_prime(next) == False:
        next += 1
    return next

def take_turn(num_rolls, opponent_score, dice=six_sided):
    """Simulate a turn rolling NUM_ROLLS dice, which may be 0 (Free Bacon).
    Return the points scored for the turn by the current player. Also
    implements the Hogtimus Prime rule.

    num_rolls:       The number of dice rolls that will be made.
    opponent_score:  The total score of the opponent.
    dice:            A function of no args that returns an integer outcome.
    """
    # Leave these assert statements here; they help check for errors.
    assert type(num_rolls) == int, 'num_rolls must be an integer.'
    assert num_rolls >= 0, 'Cannot roll a negative number of dice in take_turn.'
    assert num_rolls <= 10, 'Cannot roll more than 10 dice.'
    assert opponent_score < 100, 'The game should be over.'
    # BEGIN PROBLEM 2
    if num_rolls == 0:
         sum = free_bacon(opponent_score)
    else:
         sum = roll_dice(num_rolls, dice)
    if is_prime(sum):
        return next_prime(sum)
    else:
        return sum
    # END PROBLEM 2
